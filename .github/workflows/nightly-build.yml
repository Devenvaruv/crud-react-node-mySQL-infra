name: Deploy to EC2

on:
  schedule:
    - cron: "0 8 * * *"
  workflow_dispatch:

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    environment: DATABASE_URL 
      
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Launch to EC2
        id: launch-ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-05b10e08d247fb927 \
            --count 1 \
            --instance-type t2.micro \
            --key-name veckey \
            --security-group-ids sg-0ae6c1dd53518265f \
            --subnet-id subnet-091d221d42dca0d3f \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "Ephemeral INSTANCE_ID: $INSTANCE_ID"

          # Wait for instance to be running
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          echo "EC2 is now running. Sleeping 10..."
          sleep 10
        
      - name: Set up SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2-key.pem
          chmod 400 ec2-key.pem
      - name: Fetch Ephemeral EC2 Hostname
        id: get_temp_ec2
        run: |
          PUBLIC_DNS=$(aws ec2 describe-instances \
            --instance-ids "${{ env.INSTANCE_ID }}" \
            --query 'Reservations[0].Instances[0].PublicDnsName' \
            --output text)
          echo "PUBLIC_DNS=$PUBLIC_DNS" >> $GITHUB_ENV
          echo "::set-output name=public_dns::$PUBLIC_DNS"
          echo "Ephemeral EC2 Hostname: $PUBLIC_DNS"